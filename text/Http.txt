HTTP/1.1 â€“ Revision Notes
ðŸ”¹ Introduced (1997)

An improvement over HTTP/1.0 â€” still widely used.

âœ… Key Features
Persistent Connections (Keep-Alive)
One TCP connection can handle multiple requests/responses.
Reduces TCP handshake overhead.
Host Header Required
Host header is mandatory â†’ supports virtual hosting (multiple domains on one IP).
Chunked Transfer Encoding
Allows sending data in chunks without knowing total size beforehand.
Useful for streaming.
More Status Codes
Added codes like 409 Conflict, 410 Gone.
Better Caching Controls
Cache-Control, ETag, If-Modified-Since, If-None-Match.
Pipelining Support (but rarely used)
Multiple requests sent without waiting for responses (limited by HOL blocking).

âš  Limitations
Head-of-Line Blocking in pipelining (one slow response delays all).
Still one request per connection at a time unless pipelining (no multiplexing).
Overhead in loading many small files (CSS, JS, images).

ðŸ“Œ Common Headers
Connection: keep-alive
Host: example.com
Cache-Control: no-cache
Transfer-Encoding: chunked

ðŸ’¡ Summary Table
Feature             	HTTP/1.0	HTTP/1.1
Persistent connections	No	        Yes
Host header required	No	        Yes
Chunked encoding	    No	        Yes
Caching control	Basic	Advanced
Pipelining	            No	        Yes
Multiplexing	        No	        No

Why HTTP/2 fixed this
HTTP/2 introduced multiplexing: multiple requests/responses can be in flight interleaved on the same TCP connection.
No need to wait for earlier responses before sending later ones â€” so no HOL blocking at the application layer.

Which header is used in HTTP/1.1 to send partial data in chunks without knowing the total size beforehand?
transfer-encoding : chunk
connection: keep-alive (for http1.0 for persistent connection and http 1.1 its is default )
host : example.com (required for http1.1)